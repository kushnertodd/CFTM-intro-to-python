temp = eval(input('Enter a temperature in Celsius: '))
f_temp = 9/5*temp+32
  print('In Fahrenheit, that is', f_temp)
if f_temp > 212:
  print('That temperature is above the boiling point.')
if f_temp < 32:
  print('That temperature is below the freezing point.')

for i in range(10):
print('Hello')

for i in range(3):
  num = eval(input('Enter a number: '))
  print ('The square of your number is', num*num)
print('The loop is now done.')

Statement Values generated
range(10) 0,1,2,3,4,5,6,7,8,9
range(1,10) 1,2,3,4,5,6,7,8,9
range(3,7) 3,4,5,6
range(2,15,3) 2,5,8,11,14
range(9,2,-1) 9,8,7,6,5,4,3

Because of the way computer chips are designed, integers and decimal numbers are represented
differently on computers. Decimal numbers are represented by what are called floating point numbers.

Integer division The integer division operator, //, requires some explanation. Basically, for positive
numbers it behaves like ordinary division except that it throws away the decimal part of the
result. For instance, while 8/5 is 1.6, we have 8//5 equal to 1. We will see uses for this operator
later. Note that in many other programming languages and in older versions of Python, the usual
division operator / actually does integer division on integers.

Modulo The modulo operator, %, returns the remainder from a division.


